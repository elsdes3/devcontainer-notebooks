[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Multi-Step Dev Containers Workflow",
    "section": "",
    "text": "Run a multi-step Jupyter notebook-based workflow, in which each step runs inside its own Dev Container. This was adapted from the VS Code documentation for configuring multiple Dev Containers.\nThe following workflow steps are included\n\nGet data\n\nruns ETL pipeline to retrieve data and store in private cloud storage (AWS S3 bucket)\nsee notebooks/01-get-data\n\nExplore the data\n\nperforms exploratory data analysis using data stored in private cloud storage (AWS S3 bucket)\nsee notebooks/02-eda\n\n\n\n\n\n\nInstall Docker, including docker-compose (1, 2, 3).\nDownload and install VS Code, with the Dev Containers extension.\nCreate an AWS account and create the following AWS resources\n\ncreate an (Administrator) IAM user with the AdministratorAccess policy or with another policy that permits the user to access the private S3 bucket\n\ncreate access keys for this IAM user (1, 2)\ncopy the Access key ID and Secret Access Key into ~/.aws/credentials per these instructions\n\ncreate a private S3 bucket (1, 2)\n\n\n\n\n\n\n\n\nClone this repo into the working folder (eg. clone into ~/Downloads).\nIn VS Code, select File &gt; Open Folder… and select the notebooks folder inside project root inside the working directory (eg. open ~/Downloads/devcontainer-notebooks/notebooks). Two sub-folders (01-get-data and 02-eda) should be visible. One sub-folder corresponds to a single step in the workflow.\nA pop-up appears at the bottom right of the screen indicating the parent directory is detected to be a git repo and asking if this repo should be opened in the text editor (VS Code)\n\nA git repository was found in the parent folders of the workspace or the open file(s). Would you like to open the repository?\n\nThe parent directory is not required for any analysis, so this message can be ignored. Click Never.\nChange the contents of .devcontainer/environment.yml inside the appropriate sub-folder as required.\nPress F1 or Ctrl + Shift + P and select Dev Containers: Open Folder in Container…\nSelect the required sub-folder (01-get-data or 02-eda). The container will now be built.\nClick Starting Dev Contiainer (show log) to view the container building logs.\nIn the TERMINAL, click Maximize Panel Size.\nThe TERMINAL shows the progress of the container build process.\nAfter the container has been built\n\n\nthe TERMINAL will stop updating\nThe lower left remote indicator will display Dev Container: Containerized Jupyter Notebook\nthe contents of the workspace will be visible in the File Explorer\n\n\nIn the terminal, click Restore Panel Size.\nOpen the notebooks folder and launch a notebook.\n\n\n\n\nFirst shut down the container\n\nClose any open notebooks.\nClick the lower left remote indicator and select Close Remote Connection.\n\nNext, from the root directory of the project, remove any containers and images using\n\ncleanup container resources for the get-data step of the workflow\nmake reset-get-data docker-system-prune\ncleanup container resources for the eda step of the workflow\nmake reset-eda docker-system-prune\n\n\n\n\n\n\nCode formatting settings specified in .devcontainer/devcontainers.json are being ignored. As a result, Python modules in src are not correctly formatted.\nThis container will support running a Jupyter notebook in VS Code. It will not start the Jupyter Lab interface in a web browser.\nIt was not possible to mount the local ~/.aws folder to the same path inside the container using the docker-compose.yml file. Instead, this mounting was done using the devcontainer.json file.",
    "crumbs": [
      "Walkthrough"
    ]
  },
  {
    "objectID": "index.html#about",
    "href": "index.html#about",
    "title": "Multi-Step Dev Containers Workflow",
    "section": "",
    "text": "Run a multi-step Jupyter notebook-based workflow, in which each step runs inside its own Dev Container. This was adapted from the VS Code documentation for configuring multiple Dev Containers.\nThe following workflow steps are included\n\nGet data\n\nruns ETL pipeline to retrieve data and store in private cloud storage (AWS S3 bucket)\nsee notebooks/01-get-data\n\nExplore the data\n\nperforms exploratory data analysis using data stored in private cloud storage (AWS S3 bucket)\nsee notebooks/02-eda",
    "crumbs": [
      "Walkthrough"
    ]
  },
  {
    "objectID": "index.html#pre-requisites",
    "href": "index.html#pre-requisites",
    "title": "Multi-Step Dev Containers Workflow",
    "section": "",
    "text": "Install Docker, including docker-compose (1, 2, 3).\nDownload and install VS Code, with the Dev Containers extension.\nCreate an AWS account and create the following AWS resources\n\ncreate an (Administrator) IAM user with the AdministratorAccess policy or with another policy that permits the user to access the private S3 bucket\n\ncreate access keys for this IAM user (1, 2)\ncopy the Access key ID and Secret Access Key into ~/.aws/credentials per these instructions\n\ncreate a private S3 bucket (1, 2)",
    "crumbs": [
      "Walkthrough"
    ]
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "Multi-Step Dev Containers Workflow",
    "section": "",
    "text": "Clone this repo into the working folder (eg. clone into ~/Downloads).\nIn VS Code, select File &gt; Open Folder… and select the notebooks folder inside project root inside the working directory (eg. open ~/Downloads/devcontainer-notebooks/notebooks). Two sub-folders (01-get-data and 02-eda) should be visible. One sub-folder corresponds to a single step in the workflow.\nA pop-up appears at the bottom right of the screen indicating the parent directory is detected to be a git repo and asking if this repo should be opened in the text editor (VS Code)\n\nA git repository was found in the parent folders of the workspace or the open file(s). Would you like to open the repository?\n\nThe parent directory is not required for any analysis, so this message can be ignored. Click Never.\nChange the contents of .devcontainer/environment.yml inside the appropriate sub-folder as required.\nPress F1 or Ctrl + Shift + P and select Dev Containers: Open Folder in Container…\nSelect the required sub-folder (01-get-data or 02-eda). The container will now be built.\nClick Starting Dev Contiainer (show log) to view the container building logs.\nIn the TERMINAL, click Maximize Panel Size.\nThe TERMINAL shows the progress of the container build process.\nAfter the container has been built\n\n\nthe TERMINAL will stop updating\nThe lower left remote indicator will display Dev Container: Containerized Jupyter Notebook\nthe contents of the workspace will be visible in the File Explorer\n\n\nIn the terminal, click Restore Panel Size.\nOpen the notebooks folder and launch a notebook.\n\n\n\n\nFirst shut down the container\n\nClose any open notebooks.\nClick the lower left remote indicator and select Close Remote Connection.\n\nNext, from the root directory of the project, remove any containers and images using\n\ncleanup container resources for the get-data step of the workflow\nmake reset-get-data docker-system-prune\ncleanup container resources for the eda step of the workflow\nmake reset-eda docker-system-prune",
    "crumbs": [
      "Walkthrough"
    ]
  },
  {
    "objectID": "index.html#notes",
    "href": "index.html#notes",
    "title": "Multi-Step Dev Containers Workflow",
    "section": "",
    "text": "Code formatting settings specified in .devcontainer/devcontainers.json are being ignored. As a result, Python modules in src are not correctly formatted.\nThis container will support running a Jupyter notebook in VS Code. It will not start the Jupyter Lab interface in a web browser.\nIt was not possible to mount the local ~/.aws folder to the same path inside the container using the docker-compose.yml file. Instead, this mounting was done using the devcontainer.json file.",
    "crumbs": [
      "Walkthrough"
    ]
  }
]